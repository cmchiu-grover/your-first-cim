# frontend/nginx.conf

# Nginx 主進程的 worker 數量，通常設置為 CPU 核數或自動
worker_processes auto;

events {
    # Nginx worker 允許的最大併發連接數
    worker_connections 1024;
}

http {
    # 引入常見的 MIME 類型映射文件，讓 Nginx 知道不同文件對應的內容類型
    include mime.types;
    # 設置默認的內容類型，如果無法確定文件類型時使用
    default_type application/octet-stream;

    # 啟用高效的 sendfile 模式，直接在內核空間發送文件
    sendfile on;
    # 允許瀏覽器保持連接的時間
    keepalive_timeout 65;

    # 定義一個伺服器塊，用於處理特定的請求
    server {
        # Nginx 容器內部監聽 80 端口
        listen 80;
        # server_name 可以設置為你的域名或本地測試用的 localhost
        server_name localhost;

        # 定義如何處理根路徑 '/' 和其他非 /api/v1/ 開頭的路徑
        location / {
            # 設置靜態文件的根目錄。這是容器內部的路徑。
            # 我們在 Dockerfile 中會將本地的 static/ 目錄複製到這裡
            root /usr/share/nginx/html;

            # 設置在請求目錄時，Nginx 嘗試查找的默認文件順序
            index msg_img_posts.html index.html;

            # try_files 指令：按順序檢查文件或目錄是否存在
            # $uri: 檢查與請求 URI 匹配的文件 (例如 /css/style.css -> /usr/share/nginx/html/css/style.css)
            # $uri/: 檢查與請求 URI 匹配的目錄 (例如 /css/ -> /usr/share/nginx/html/css/index.html 或其他 index 文件)
            # =404: 如果前面都找不到，返回 404 錯誤
            # 對於純靜態網站，通常這樣就夠了。
            # 如果是 SPA (單頁應用)，可能會將最後一個參數指向 index.html，讓前端路由處理
            try_files $uri $uri/ =404;
        }

        # 定義如何處理以 /api/v1/ 開頭的請求
        location /api/ {
            # 將請求轉發給後端服務
            # http://backend:8000/ 是後端服務在 Docker 網絡中的地址和端口
            # 'backend' 是你在 docker-compose.yml 中給後端服務起的名字
            # '8000' 是後端 FastAPI 容器內部監聽的端口 (根據你的後端 Dockerfile CMD)
            # 後面的 /api/v1/ 會影響 Nginx 轉發時是否保留或替換原始路徑
            proxy_pass http://backend:8000/api/;

            # 設置一些代理頭部，以便後端能獲取真實的客戶端信息
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; # 傳遞請求協議 (http 或 https)
        }

        # 定義錯誤頁面 (可選)
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        #     root /usr/share/nginx/html;
        # }
    }
}